name: Security Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  security-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: careunity_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: node scripts/security-audit.js
      
      - name: Check for vulnerabilities
        run: node scripts/check-vulnerabilities.js
      
      - name: Start server for testing
        run: |
          npm run build
          npm run start:test &
          npx wait-on http://localhost:5000/api/healthcheck
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/careunity_test
          NODE_ENV: test
          PORT: 5000
      
      - name: Run security tests
        run: node scripts/security-tests.js
        env:
          TEST_API_URL: http://localhost:5000
      
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            reports/security-test-report.md
            reports/vulnerability-report.json
            reports/vulnerability-summary.md
  
  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'CareUnity'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --suppression suppression.xml
            --failOnCVSS 7
            --enableRetired
      
      - name: Upload dependency check report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-check-report
          path: reports/dependency-check-report.html
  
  code-scanning:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      
      - name: Upload CodeQL results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results/javascript.sarif
