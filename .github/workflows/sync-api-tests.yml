name: Sync API Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'client/src/services/**'
      - 'client/src/lib/**'
      - 'server/routes/sync.ts'
      - 'sync-tests/**'
      - '.github/workflows/sync-api-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'client/src/services/**'
      - 'client/src/lib/**'
      - 'server/routes/sync.ts'
      - 'sync-tests/**'
      - '.github/workflows/sync-api-tests.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run sync service unit tests
        run: |
          npm run test:sync
          # Install jsdom for the extended tests
          npm install --save-dev jsdom@latest
          # Run extended tests with Node environment as fallback
          npx vitest run --environment node client/src/services/__tests__/sync-service-extended.test.ts

      - name: Install sync-tests dependencies
        run: |
          cd sync-tests
          npm ci

      - name: Start mock server and run sync API tests
        run: |
          cd sync-tests
          npm run start-mock &
          sleep 5 # Give the server time to start
          npm run test
          npm run test:auth
          npm run test:performance
          npm run test:conflicts
          npm run test:errors

      - name: Generate performance report
        run: |
          cd sync-tests
          npm run generate-report

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            junit-report.xml
            coverage/
            sync-tests/performance-reports/
