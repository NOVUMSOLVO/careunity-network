{
  "info": {
    "_postman_id": "a5e7b8c9-d0e1-4f23-a6b7-c8d9e0f1a2b3",
    "name": "CareUnity Visits API",
    "description": "Tests for the CareUnity Visits API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    pm.expect(response).to.have.property('token');",
                  "    pm.environment.set('auth_token', response.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{test_user_email}}\",\n    \"password\": \"{{test_user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login to get authentication token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Visits",
      "item": [
        {
          "name": "Get All Visits",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(Array.isArray(response)).to.be.true;",
                  "});",
                  "",
                  "if (pm.response.json().length > 0) {",
                  "    const firstVisit = pm.response.json()[0];",
                  "    pm.environment.set('visit_id', firstVisit.id);",
                  "    ",
                  "    pm.test(\"Visit has required properties\", function () {",
                  "        pm.expect(firstVisit).to.have.property('id');",
                  "        pm.expect(firstVisit).to.have.property('serviceUserId');",
                  "        pm.expect(firstVisit).to.have.property('date');",
                  "        pm.expect(firstVisit).to.have.property('startTime');",
                  "        pm.expect(firstVisit).to.have.property('endTime');",
                  "        pm.expect(firstVisit).to.have.property('status');",
                  "        pm.expect(firstVisit).to.have.property('visitType');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v2/visits",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits"
              ]
            },
            "description": "Get all visits"
          },
          "response": []
        },
        {
          "name": "Create Visit",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has visit data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('serviceUserId');",
                  "    pm.expect(response).to.have.property('date');",
                  "    pm.expect(response).to.have.property('startTime');",
                  "    pm.expect(response).to.have.property('endTime');",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response).to.have.property('visitType');",
                  "    ",
                  "    pm.environment.set('visit_id', response.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"serviceUserId\": {{service_user_id}},\n    \"caregiverId\": {{caregiver_id}},\n    \"date\": \"2023-10-15\",\n    \"startTime\": \"2023-10-15T09:00:00Z\",\n    \"endTime\": \"2023-10-15T10:00:00Z\",\n    \"status\": \"scheduled\",\n    \"notes\": \"Test visit created by Postman\",\n    \"priority\": \"normal\",\n    \"visitType\": \"personal care\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v2/visits",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits"
              ]
            },
            "description": "Create a new visit"
          },
          "response": []
        },
        {
          "name": "Get Visit by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has visit data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response.id).to.equal(parseInt(pm.environment.get('visit_id')));",
                  "    pm.expect(response).to.have.property('serviceUserId');",
                  "    pm.expect(response).to.have.property('date');",
                  "    pm.expect(response).to.have.property('startTime');",
                  "    pm.expect(response).to.have.property('endTime');",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response).to.have.property('visitType');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v2/visits/{{visit_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits",
                "{{visit_id}}"
              ]
            },
            "description": "Get a visit by ID"
          },
          "response": []
        },
        {
          "name": "Update Visit",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated visit data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response.id).to.equal(parseInt(pm.environment.get('visit_id')));",
                  "    pm.expect(response).to.have.property('notes');",
                  "    pm.expect(response.notes).to.equal('Updated test visit');",
                  "    pm.expect(response).to.have.property('priority');",
                  "    pm.expect(response.priority).to.equal('high');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"notes\": \"Updated test visit\",\n    \"priority\": \"high\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v2/visits/{{visit_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits",
                "{{visit_id}}"
              ]
            },
            "description": "Update a visit"
          },
          "response": []
        },
        {
          "name": "Complete Visit",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has completed visit data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response.id).to.equal(parseInt(pm.environment.get('visit_id')));",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response.status).to.equal('completed');",
                  "    pm.expect(response).to.have.property('feedback');",
                  "    pm.expect(response.feedback).to.equal('Good service');",
                  "    pm.expect(response).to.have.property('feedbackRating');",
                  "    pm.expect(response.feedbackRating).to.equal(5);",
                  "    pm.expect(response).to.have.property('completedAt');",
                  "    pm.expect(response).to.have.property('completedBy');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"notes\": \"Visit completed successfully\",\n    \"feedback\": \"Good service\",\n    \"feedbackRating\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v2/visits/{{visit_id}}/complete",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits",
                "{{visit_id}}",
                "complete"
              ]
            },
            "description": "Complete a visit"
          },
          "response": []
        },
        {
          "name": "Create Visit for Cancellation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has visit data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.environment.set('cancel_visit_id', response.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"serviceUserId\": {{service_user_id}},\n    \"caregiverId\": {{caregiver_id}},\n    \"date\": \"2023-10-16\",\n    \"startTime\": \"2023-10-16T09:00:00Z\",\n    \"endTime\": \"2023-10-16T10:00:00Z\",\n    \"status\": \"scheduled\",\n    \"priority\": \"normal\",\n    \"visitType\": \"personal care\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v2/visits",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits"
              ]
            },
            "description": "Create a new visit for cancellation"
          },
          "response": []
        },
        {
          "name": "Cancel Visit",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has cancelled visit data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response.id).to.equal(parseInt(pm.environment.get('cancel_visit_id')));",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response.status).to.equal('cancelled');",
                  "    pm.expect(response).to.have.property('notes');",
                  "    pm.expect(response.notes).to.include('Service user unavailable');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"Service user unavailable\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v2/visits/{{cancel_visit_id}}/cancel",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits",
                "{{cancel_visit_id}}",
                "cancel"
              ]
            },
            "description": "Cancel a visit"
          },
          "response": []
        },
        {
          "name": "Filter Visits by Date",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(Array.isArray(response)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"All visits have the correct date\", function () {",
                  "    const response = pm.response.json();",
                  "    response.forEach(function(visit) {",
                  "        pm.expect(visit.date).to.equal('2023-10-15');",
                  "    });",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v2/visits?date=2023-10-15",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v2",
                "visits"
              ],
              "query": [
                {
                  "key": "date",
                  "value": "2023-10-15"
                }
              ]
            },
            "description": "Filter visits by date"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}
